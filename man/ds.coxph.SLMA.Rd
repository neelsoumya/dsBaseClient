% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.coxph.SLMA.R
\name{ds.coxph.SLMA}
\alias{ds.coxph.SLMA}
\title{Performs survival analysis using Cox proportional hazards model}
\usage{
ds.coxph.SLMA(formula = NULL, dataName = NULL, datasources = NULL)
}
\arguments{
\item{formula}{character string (potentially including \code{*} symbol without spaces) 
specifying the formula that you want to pass to the server-side.
For more information see \strong{Details}.}

\item{dataName}{character string of name of data frame}

\item{datasources}{a list of \code{\link{DSConnection-class}} objects obtained after login. 
If the \code{datasources} argument is not specified
the default set of connections will be used: see \code{\link{datashield.connections_default}}.}
}
\value{
\code{coxphSLMADS} returns to the client-side a summary of 
the Cox proportional hazards model
}
\description{
Passes a formula to a server side environment and returns the summary of 
Cox proportional hazards model from the server.
}
\details{
This is a function that performs survival analysis using the Cox 
proportional hazards model. 

Server function called: \code{coxphSLMADS}.
}
\examples{
\dontrun{

  ## Version 6
  
  # connecting to the Opal servers

  require('DSI')
  require('DSOpal')
  require('dsBaseClient')

  builder <- DSI::newDSLoginBuilder()
  builder$append(server = "study1", 
                 url = "http://192.168.56.100:8080/", 
                 user = "administrator", password = "datashield_test&", 
                 table = "SURVIVAL.EXPAND_NO_MISSING1", driver = "OpalDriver")
  builder$append(server = "study2", 
                 url = "http://192.168.56.100:8080/", 
                 user = "administrator", password = "datashield_test&", 
                 table = "SURVIVAL.EXPAND_NO_MISSING2", driver = "OpalDriver")
  builder$append(server = "study3",
                 url = "http://192.168.56.100:8080/", 
                 user = "administrator", password = "datashield_test&", 
                 table = "SURVIVAL.EXPAND_NO_MISSING3", driver = "OpalDriver")
  logindata <- builder$build()
  
  connections <- DSI::datashield.login(logins = logindata, assign = TRUE, symbol = "D") 
  
  # make sure that the outcome is numeric 
  ds.asNumeric(x.name = "D$cens",
            newobj = "EVENT",
            datasources = connections)

  ds.asNumeric(x.name = "D$survtime",
            newobj = "SURVTIME",
            datasources = connections)

  dsBaseClient::ds.coxph.SLMA(formula = 'survival::Surv(time = SURVTIME, event = EVENT) ~  D$female', 
            dataName = 'D', datasources = connections)
  
  # clear the Datashield R sessions and logout
  datashield.logout(connections)
}

}
\author{
Soumya Banerjee, 2020
}
